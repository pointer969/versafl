{"$schema-ref":"http://schemas.sap.com/sapui5/designtime/api.json/1.0","version":"1.65.1","library":"sap.ui.integration","symbols":[{"kind":"namespace","name":"sap.ui.integration","basename":"integration","resource":"sap/ui/integration/library.js","module":"sap/ui/integration/library","export":"","static":true,"visibility":"public","description":"<p><p>SAPUI5 library with controls specialized for SAP Fiori apps.</p></p>","displayName":"sap.ui.integration","nodes":[{"name":"sap.ui.integration.CardDataMode","description":"<p>Possible data modes for <code><a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.ui.integration.widgets.Card\">sap.ui.integration.widgets.Card</a></code>.</p>","href":"#/api/sap.ui.integration.CardDataMode"},{"name":"sap.ui.integration.widgets","description":"","href":"#/api/sap.ui.integration.widgets"}],"component":"CA-UI5-CTR","hasSample":false,"title":"namespace sap.ui.integration","subTitle":""},{"kind":"enum","name":"sap.ui.integration.CardDataMode","basename":"CardDataMode","resource":"sap/ui/integration/library.js","module":"sap/ui/integration/library","export":"CardDataMode","static":true,"visibility":"public","since":"1.65","description":"<p><p>Possible data modes for <code><a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.ui.integration.widgets.Card\">sap.ui.integration.widgets.Card</a></code>.</p></p>","experimental":{"since":"1.65"},"properties":[{"name":"sap.ui.integration.CardDataMode.Active","visibility":"public","description":"<p>When in this mode, the card can make requests.</p>"},{"name":"sap.ui.integration.CardDataMode.Inactive","visibility":"public","description":"<p>When in this mode, the card cannot make requests.</p>"}],"displayName":"sap.ui.integration.CardDataMode","component":"CA-UI5-CTR","hasSample":false,"title":"enum sap.ui.integration.CardDataMode","subTitle":""},{"kind":"class","name":"sap.ui.integration.widgets.Card","basename":"Card","resource":"sap/ui/integration/widgets/Card.js","module":"sap/ui/integration/widgets/Card","export":"","static":true,"visibility":"public","since":"1.62","extends":"sap.ui.core.Control","implements":["sap.f.ICard"],"description":"<p>A control that represents a container with a header and content.</p><h3>Overview</h3><p> Cards are small user interface elements which provide the most important information from an app, related to a specific role or task. The information is represented in a compact manner, allowing for actions to be executed. Cards can be described as small representations of an app which can be integrated in different systems.</p><p>The integration card is defined in a declarative way, using a manifest.json to be: <ul> <li>Easily integrated into apps</li> <li>Easily reused across apps</li> <li>Understandable by other technologies</li> <li>Self-contained (without external configuration)</li> <li>Easily reconfigured in app layers (including backend)</li> <li>Easy to separate the roles of the card and the app developers</li> </ul></p><p>The role of the card developer is to describe the card in a manifest.json file and define: <ul> <li>Header</li> <li>Content</li> <li>Data source</li> <li>Possible actions</li> </ul></p><p>The role of the app developer is to integrate the card into the app and define: <ul> <li>The dimensions of the card inside a layout of choice, using the <code>width</code> and <code>height</code> properties</li> <li>The behavior for the actions described in the manifest.json file, using the action event</li> </ul></p><h3>Usage</h3><p>The <code>\"sap.app\"</code> <code>type</code> property in the manifest file must be set to <code>\"card\"</code>. The namespace used to define a card is <code>\"sap.card\"</code>. Every card has a type which can be one of the following: List, Analytical, Timeline, Object, Table, Component (experimental)</p><p>An example of a manifest.json:</p><p><pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\",\n    ...\n  },\n  \"sap.ui5\": {\n    ...\n  },\n  \"sap.card\": {\n    \"type\": \"List\",\n    \"header\": { ... },\n    \"content\": { ... }\n  }\n}\n</code>\n</pre></p><p>Examples of header sections:</p><p>The default header type can contain title, subtitle, icon, and status. <pre>\n <code>\n{\n  ...\n  \"sap.card\": {\n    \"header\": {\n      \"title\": \"An example title\",\n      \"subTitle\": \"Some subtitle\",\n      \"icon\": {\n        \"src\": \"sap-icon://business-objects-experience\"\n      },\n      \"status\": {\n        \"text\": \"5 of 20\"\n      }\n    },\n    ...\n  }\n}\n </code>\n </pre></p><p>The numeric header type can contain title, subtitle, unitOfMeasurement, details, main indicator, and side indicators. <pre>\n <code>\n{\n  ...\n  \"sap.card\": {\n    \"header\": {\n      \"type\": \"Numeric\",\n      \"title\": \"Project Cloud Transformation\",\n      \"subTitle\": \"Revenue\",\n      \"unitOfMeasurement\": \"EUR\",\n      \"mainIndicator\": {\n        \"number\": \"44\",\n        \"unit\": \"%\",\n        \"trend\": \"Down\",\n        \"state\": \"Critical\"\n      },\n      \"details\": \"Some details\",\n      \"sideIndicators\": [\n        {\n          \"title\": \"Target\",\n          \"number\": \"17\",\n          \"unit\": \"%\"\n        },\n        {\n          \"title\": \"Deviation\",\n          \"number\": \"5\",\n          \"unit\": \"%\"\n        }\n      ]\n    },\n    ...\n  }\n}\n </code>\n </pre></p><p>The content of the card is created based on the card type. Possible card types: <ul> <li>List</li> <li>Object</li> <li>Timeline</li> <li>Analytical</li> <li>Table</li> <li>Component (experimental)</li> </ul></p><p>List card contains a set of items. The <code>\"item\"</code> property defines the template for all the items of the list. The <code>\"data\"</code> property provides the displayed information.</p><p>Example: <pre>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"List\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"data\": {\n        \"json\": [{\n            \"Name\": \"Comfort Easy\",\n            \"Description\": \"A 32 GB Digital Assistant with a high-resolution color screen\",\n            \"Highlight\": \"Error\"\n          },\n          {\n            \"Name\": \"ITelO Vault\",\n            \"Description\": \"A Digital Organizer with state-of-the-art Storage Encryption\",\n            \"Highlight\": \"Warning\"\n          },\n          {\n            \"Name\": \"Notebook Professional 15\",\n            \"Description\": \"Notebook Professional 15 description\",\n            \"Highlight\": \"Success\"\n          }\n        ]\n      },\n      \"item\": {\n        \"title\": {\n          \"label\": \"{{title_label}}\",\n          \"value\": \"{Name}\"\n        },\n        \"description\": {\n          \"label\": \"{{description_label}}\",\n          \"value\": \"{Description}\"\n        },\n        \"highlight\": \"{Highlight}\"\n      }\n    }\n  }\n}\n</pre></p><p>Analytical card contains a chart visualization configuration. Supported chart types are Line, StackedBar, StackedColumn, Donut.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"Analytical\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"chartType\": \"Line\",\n      \"legend\": {\n        \"visible\": true,\n        \"position\": \"Bottom\",\n        \"alignment\": \"Left\"\n      },\n      \"plotArea\": {\n        \"dataLabel\": {\n          \"visible\": true\n        },\n        \"categoryAxisText\": {\n          \"visible\": false\n        },\n        \"valueAxisText\": {\n          \"visible\": false\n        }\n      },\n      \"title\": {\n        \"text\": \"Line chart\",\n        \"visible\": true,\n        \"alignment\": \"Left\"\n      },\n      \"measureAxis\": \"valueAxis\",\n      \"dimensionAxis\": \"categoryAxis\",\n      \"data\": {\n        \"json\": {\n          \"list\": [\n            {\n              \"Week\": \"CW14\",\n              \"Revenue\": 431000.22,\n              \"Cost\": 230000.00,\n              \"Cost1\": 24800.63,\n              \"Cost2\": 205199.37,\n              \"Cost3\": 199999.37,\n              \"Target\": 500000.00,\n              \"Budget\": 210000.00\n            },\n            {\n              \"Week\": \"CW15\",\n              \"Revenue\": 494000.30,\n              \"Cost\": 238000.00,\n              \"Cost1\": 99200.39,\n              \"Cost2\": 138799.61,\n              \"Cost3\": 200199.37,\n              \"Target\": 500000.00,\n              \"Budget\": 224000.00\n            }\n          ]\n        },\n        \"path\": \"/list\"\n      },\n      \"dimensions\": [\n        {\n          \"label\": \"Weeks\",\n          \"value\": \"{Week}\"\n        }\n      ],\n      \"measures\": [\n        {\n          \"label\": \"Revenue\",\n          \"value\": \"{Revenue}\"\n        },\n        {\n          \"label\": \"Cost\",\n          \"value\": \"{Cost}\"\n        }\n      ]\n    }\n  }\n}\n</code>\n</pre></p><p>Object card contains information about an object. It is structured in groups. Every group can have a title and items. The items contain display name (label) and value.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n\t    \"type\": \"Object\",\n     \"header\": {\n       ...\n     },\n     \"content\": {\n       \"groups\": [\n         {\n           \"title\": \"Group title\",\n           \"items\": [\n             {\n               \"label\": \"Name\",\n               \"value\": \"Ivan\"\n             },\n             {\n               \"label\": \"Surname\",\n               \"value\": \"Petrov\"\n             },\n             {\n               \"label\": \"Phone\",\n               \"value\": \"+1 1234 1234555\"\n             }\n           ]\n         },\n         {\n           \"title\": \"Organization\",\n           \"items\": [\n             {\n               \"label\": \"Company Name\",\n               \"value\": \"Sap\",\n               \"icon\": {\n                 \"src\": \"../images/Woman_avatar_02.png\"\n               }\n             }\n           ]\n         }\n       ]\n     }\n  }\n}\n</code>\n</pre></p><p>Timeline card contains a set of timeline items. The \"item\" property defines the template for all the items of the timeline.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"Timeline\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"data\": {\n        \"json\": [\n          {\n            \"Title\": \"Weekly sync: Marketplace / Design Stream\",\n            \"Description\": \"MRR WDF18 C3.2(GLASSBOX)\",\n            \"Icon\": \"sap-icon://appointment-2\",\n            \"Time\": \"10:00 - 10:30\"\n          },\n          {\n            \"Title\": \"Video Conference for FLP@SF, S4,Hybris\",\n            \"Icon\": \"sap-icon://my-view\",\n            \"Time\": \"14:00 - 15:30\"\n          },\n          {\n            \"Title\": \"Call 'Project Nimbus'\",\n            \"Icon\": \"sap-icon://outgoing-call\",\n            \"Time\": \"16:00 - 16:30\"\n          }\n        ]\n      },\n      \"item\": {\n        \"dateTime\": {\n          \"value\": \"{Time}\"\n        },\n        \"description\" : {\n          \"value\": \"{Description}\"\n        },\n        \"title\": {\n          \"value\": \"{Title}\"\n        },\n        \"icon\": {\n          \"src\": \"{Icon}\"\n        }\n      }\n    }\n  }\n}\n</code>\n</pre></p><p>Table card displays a set of items in a table format. The <code>\"row\"</code> property defines the template for all rows of the table.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"Table\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"data\": {\n        \"json\": [\n          {\n           \"salesOrder\": \"5000010050\",\n           \"customerName\": \"Robert Brown Entertainment\",\n           \"netAmount\": \"2K USD\",\n           \"status\": \"Delivered\",\n           \"statusState\": \"Success\"\n          },\n          {\n           \"salesOrder\": \"5000010051\",\n           \"customerName\": \"Entertainment Argentinia\",\n           \"netAmount\": \"127k USD\",\n           \"status\": \"Canceled\",\n           \"statusState\": \"Error\"\n          },\n          {\n           \"salesOrder\": \"5000010052\",\n           \"customerName\": \"Brazil Technologies\",\n           \"netAmount\": \"8K USD\",\n           \"status\": \"In Progress\",\n           \"statusState\": \"Warning\"\n          }\n        ]\n      },\n      \"row\": {\n        \"columns\": [{\n           \"title\": \"Sales Order\",\n           \"value\": \"{salesOrder}\",\n           \"identifier\": true\n          },\n          {\n            \"title\": \"Customer\",\n            \"value\": \"{customerName}\"\n          },\n          {\n             \"title\": \"Net Amount\",\n             \"value\": \"{netAmount}\"\n          },\n          {\n             \"title\": \"Status\",\n             \"value\": \"{status}\",\n             \"state\": \"{statusState}\"\n          }\n        ]\n      }\n    }\n  }\n}\n</code>\n</pre></p><p>Component card can be used to display multiple controls (inside one Component). It is used as a custom approach for use cases, which do not fit in other card types and structures. It provides much more flexibility and responsibility to the Card’s authors. Reusability is achieved on Component level and this type of Card is usable in LOB products that are based on the SAPUI5 Framework.</p><p>Example: <pre>\n<code>\n{\n\t\"sap.app\": {\n\t\t\"id\": \"sap.ui.integration.sample.ComponentCard.cardContent\",\n\t\t\"type\": \"card\",\n\t\t\"applicationVersion\": {\n\t\t\"version\": \"1.0.0\"\n\t\t}\n\t},\n\t\"sap.ui5\": {\n\t\t\"rootView\": {\n\t\t\t\"viewName\": \"sap.ui.integration.sample.ComponentCard.cardContent.View\",\n\t\t\t\"type\": \"XML\",\n\t\t\t\"async\": true,\n\t\t\t\"id\": \"app\"\n\t\t},\n\t\t\"dependencies\": {\n\t\t\t\"minUI5Version\": \"1.38\",\n\t\t\t\"libs\": {\n\t\t\t\t\"sap.m\": {}\n\t\t\t}\n\t\t}\n\t},\n\t\"sap.card\": {\n\t\t\"type\": \"Component\",\n\t\t\"header\": {\n\t\t\t\"title\": \"Visit our workshop\"\n\t\t}\n\t}\n}\n</code>\n</pre></p><p>Item-based cards (Timeline and List) have an additional <code>\"maxItems\"</code> content property, which defines the maximum number of items the card can have.</p><h3>Data Handling</h3><p> To add data to the card, you can add a data section, header or content. The card automatically creates an unnamed model which can be used to resolve binding syntaxes inside the card manifest.</p><p>Static data: <pre>\n<code>\n{\n  ...\n  \"content\": {\n    \"data\": {\n      \"json\": {\n        \"items\": [\n          {\n            \"Title\": \"Weekly sync: Marketplace / Design Stream\",\n            \"Description\": \"MRR WDF18 C3.2(GLASSBOX)\",\n            \"Icon\": \"sap-icon://appointment-2\",\n            \"Time\": \"10:00 - 10:30\"\n          },\n          {\n            \"Title\": \"Video Conference for FLP@SF, S4,Hybris\",\n            \"Icon\": \"sap-icon://my-view\",\n            \"Time\": \"14:00 - 15:30\"\n          }\n        ]\n      },\n      \"path\": \"/items\"\n    },\n    ...\n  }\n}\n</code>\n</pre></p><p>Requesting data: <pre>\n<code>\n{\n  ...\n  \"content\": {\n    \"data\": {\n      \"request\": {\n        \"url\": \"/path/to/data\"\n      },\n      \"path\": \"/items\"\n    },\n    ...\n  }\n}\n</code>\n</pre></p><h3>Actions</h3><p> Actions add behavior to the card. To add a navigation action to the header and to the items, you can configure it inside the manifest.</p><p>Actions have: <ul> <li>Type</li> <li>Parameters</li> <li>Enabled flag (true by default)</li> </ul></p><p>In the example below, a navigation action is added both to the header and the list items: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"List\",\n    \"header\": {\n      \"title\": \"Request list content Card\",\n      \"subTitle\": \"Card Subtitle\",\n      \"icon\": {\n        \"src\": \"sap-icon://accept\"\n      },\n      \"status\": \"100 of 200\",\n      \"actions\": [\n        {\n          \"type\": \"Navigation\",\n          \"parameters\": {\n            \"url\": \"/some/relative/path\"\n          }\n        }\n      ]\n    },\n    \"content\": {\n      \"data\": {\n        \"request\": {\n          \"url\": \"./cardcontent/someitems_services2.json\"\n        },\n        \"path\": \"/items\"\n      },\n      \"item\": {\n        \"icon\": {\n          \"src\": \"{icon}\"\n        },\n        \"title\": {\n          \"value\": \"{Name}\"\n        },\n        \"description\": {\n          \"value\": \"{Description}\"\n        },\n        \"actions\": [\n          {\n            \"type\": \"Navigation\",\n            \"enabled\": \"{= ${url}}\",\n            \"parameters\": {\n              \"url\": \"{url}\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n</code>\n</pre></p><p><i>When to use</i> <ul> <li>When you want to reuse the card across apps.</li> <li>When you need easy integration and configuration.</li> </ul></p><p><i>When not to use</i> <ul> <li>When you need more header and content flexibility.</li> <li>When you have to achieve simple card visualization. For such cases, use: <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.f.Card\">Card</a>.</li> <li>When you have to use an application model. For such cases, use: <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.f.Card\">Card</a>.</li> <li>When you need complex behavior. For such cases, use: <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.f.Card\">Card</a>.</li> </ul></p>","ui5-metamodel":true,"ui5-metadata":{"stereotype":"control","properties":[{"name":"dataMode","type":"sap.ui.integration.CardDataMode","defaultValue":"Active","group":"Behavior","visibility":"public","since":"1.65","description":"<p>Defines the state of the <code>Card</code>. When set to <code>Inactive</code>, the <code>Card</code> doesn't make requests.<br><br><i>Since: 1.65.</i></p>","experimental":{"since":"1.65"},"methods":["getDataMode","setDataMode"],"linkEnabled":true},{"name":"height","type":"sap.ui.core.CSSSize","defaultValue":"auto","group":"Appearance","visibility":"public","description":"<p>Defines the height of the card.</p>","methods":["getHeight","setHeight"],"linkEnabled":true},{"name":"manifest","type":"any","defaultValue":"empty string","group":"Misc","visibility":"public","description":"<p>The URL of the manifest or an object.</p>","methods":["getManifest","setManifest"]},{"name":"parameters","type":"object","defaultValue":"","group":"Misc","visibility":"public","description":"<p>The parameters used in the manifest.</p>","experimental":{"since":"1.65","text":"This property might be changed in future."},"methods":["getParameters","setParameters"]},{"name":"width","type":"sap.ui.core.CSSSize","defaultValue":"100%","group":"Appearance","visibility":"public","description":"<p>Defines the width of the card.</p>","methods":["getWidth","setWidth"],"linkEnabled":true}],"aggregations":[{"name":"_content","singularName":"_content","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"hidden","description":"<p>Defines the content of the card.</p>","methods":["get_content","destroy_content","set_content"],"linkEnabled":true},{"name":"_header","singularName":"_header","type":"sap.f.cards.IHeader","cardinality":"0..1","visibility":"hidden","description":"<p>Defines the header of the card.</p>","methods":["get_header","destroy_header","set_header"],"linkEnabled":true}],"associations":[{"name":"hostConfigurationId","singularName":"hostConfigurationId","type":"sap.ui.core.Control","cardinality":"0..1","visibility":"public","description":"<p>The ID of the host configuration.</p>","methods":["getHostConfigurationId","setHostConfigurationId"],"linkEnabled":true}]},"constructor":{"visibility":"public","parameters":[{"name":"sId","optional":true,"description":"<p>ID for the new control, generated automatically if no ID is given</p>","phoneName":"sId","depth":0,"types":[{"name":"string","linkEnabled":false}],"defaultValue":""},{"name":"mSettings","optional":true,"description":"<p>Initial settings for the new control</p>","phoneName":"mSettings","depth":0,"types":[{"name":"object","linkEnabled":false}],"defaultValue":""}],"description":"<p>Constructor for a new <code>Card</code>.</p><p>Accepts an object literal <code>mSettings</code> that defines initial property values, aggregated and associated objects as well as event handlers. See <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.ui.base.ManagedObject/constructor\">sap.ui.base.ManagedObject#constructor</a> for a general description of the syntax of the settings object.</p>","references":[],"codeExample":"<pre class=\"prettyprint\">new sap.ui.integration.widgets.Card(sId?, mSettings?)</pre>"},"events":[{"name":"action","visibility":"public","parameters":[{"name":"oControlEvent","type":"sap.ui.base.Event","linkEnabled":true,"description":""},{"name":"getSource","type":"sap.ui.base.EventProvider","optional":false,"depth":1,"phoneName":"oControlEvent.getSource","linkEnabled":true,"description":""},{"name":"getParameters","type":"object","optional":false,"depth":1,"phoneName":"oControlEvent.getParameters","description":""},{"name":"actionSource","type":"sap.ui.core.Control","optional":false,"description":"<p>The action source.</p>","depth":2,"phoneName":"oControlEvent.getParameters.actionSource","linkEnabled":true},{"name":"manifestParameters","type":"object","optional":false,"description":"<p>The manifest parameters related to the triggered action.</p>","depth":2,"phoneName":"oControlEvent.getParameters.manifestParameters"},{"name":"type","type":"sap.ui.integration.CardActionType","optional":false,"description":"<p>The type of the action.</p>","depth":2,"phoneName":"oControlEvent.getParameters.type","linkEnabled":true}],"description":"<p>Fired when an action is triggered on the card.</p>","experimental":{"since":"1.64","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."}}],"methods":[{"name":"attachAction","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"oData","optional":true,"description":"<p>An application-specific payload object that will be passed to the event handler along with the event object when firing the event</p>","types":[{"value":"object"}],"defaultValue":""},{"name":"fnFunction","optional":false,"description":"<p>The function to be called when the event occurs</p>","types":[{"value":"function"}],"defaultValue":""},{"name":"oListener","optional":true,"description":"<p>Context object to call the event handler with. Defaults to this <code>sap.ui.integration.widgets.Card</code> itself</p>","types":[{"value":"object"}],"defaultValue":""}],"description":"<p>Attaches event handler <code>fnFunction</code> to the <a target=\"_self\" class=\"jsdoclink scrollToEvent\" data-sap-ui-target=\"action\" href=\"#/api/sap.ui.integration.widgets.Card/events/action\">action</a> event of this <code>sap.ui.integration.widgets.Card</code>.</p><p>When called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, otherwise it will be bound to this <code>sap.ui.integration.widgets.Card</code> itself.</p><p>Fired when an action is triggered on the card.</p>","experimental":{"since":"1.64","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"href":"#/api/sap.ui.integration.widgets.Card/methods/attachAction","code":"<pre class=\"prettyprint\">attachAction(oData?, fnFunction, oListener?) : sap.ui.integration.widgets.Card</pre>"},{"name":"detachAction","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"fnFunction","optional":false,"description":"<p>The function to be called, when the event occurs</p>","types":[{"value":"function"}],"defaultValue":""},{"name":"oListener","optional":true,"description":"<p>Context object on which the given function had to be called</p>","types":[{"value":"object"}],"defaultValue":""}],"description":"<p>Detaches event handler <code>fnFunction</code> from the <a target=\"_self\" class=\"jsdoclink scrollToEvent\" data-sap-ui-target=\"action\" href=\"#/api/sap.ui.integration.widgets.Card/events/action\">action</a> event of this <code>sap.ui.integration.widgets.Card</code>.</p><p>The passed function and listener object must match the ones used for event registration.</p>","experimental":{"since":"1.64","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"href":"#/api/sap.ui.integration.widgets.Card/methods/detachAction","code":"<pre class=\"prettyprint\">detachAction(fnFunction, oListener?) : sap.ui.integration.widgets.Card</pre>"},{"name":"sap.ui.integration.widgets.Card.extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"<p>Created class / constructor function</p>","types":[{"value":"function"}]},"parameters":[{"name":"sClassName","optional":false,"description":"<p>Name of the class being created</p>","types":[{"value":"string"}],"defaultValue":""},{"name":"oClassInfo","optional":true,"description":"<p>Object literal with information about the class</p>","types":[{"value":"object"}],"defaultValue":""},{"name":"FNMetaImpl","optional":true,"description":"<p>Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code></p>","types":[{"value":"function"}],"defaultValue":""}],"description":"<p>Creates a new subclass of class sap.ui.integration.widgets.Card with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.</p><p><code>oClassInfo</code> might contain the same kind of information as described in <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.ui.core.Control/methods/sap.ui.core.Control.extend\">sap.ui.core.Control.extend</a>.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/sap.ui.integration.widgets.Card.extend","code":"<pre class=\"prettyprint\">sap.ui.integration.widgets.Card.extend(sClassName, oClassInfo?, FNMetaImpl?) : function</pre>"},{"name":"fireAction","visibility":"protected","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"mParameters","optional":true,"description":"<p>Parameters to pass along with the event</p>","types":[{"value":"object"}],"defaultValue":""},{"name":"actionSource","optional":true,"description":"<p>The action source.</p>","depth":1,"types":[{"value":"sap.ui.core.Control","linkEnabled":true,"href":"#/api/sap.ui.core.Control"}],"phoneName":"mParameters.actionSource","defaultValue":""},{"name":"manifestParameters","optional":true,"description":"<p>The manifest parameters related to the triggered action.</p>","depth":1,"types":[{"value":"object"}],"phoneName":"mParameters.manifestParameters","defaultValue":""},{"name":"type","optional":true,"description":"<p>The type of the action.</p>","depth":1,"types":[{"value":"sap.ui.integration.CardActionType","linkEnabled":true,"href":"#/api/sap.ui.integration.CardActionType"}],"phoneName":"mParameters.type","defaultValue":""}],"description":"<p>Fires event <a target=\"_self\" class=\"jsdoclink scrollToEvent\" data-sap-ui-target=\"action\" href=\"#/api/sap.ui.integration.widgets.Card/events/action\">action</a> to attached listeners.</p>","experimental":{"since":"1.64","text":"Disclaimer: this property is in a beta state - incompatible API changes may be done before its official public release. Use at your own discretion."},"href":"#/api/sap.ui.integration.widgets.Card/methods/fireAction","code":"<pre class=\"prettyprint\">fireAction(mParameters?) : sap.ui.integration.widgets.Card</pre>"},{"name":"getCardContent","visibility":"protected","returnValue":{"type":"sap.ui.core.Control","description":"<p>The content of the card</p>","types":[{"value":"sap.ui.core.Control","href":"#/api/sap.ui.core.Control","linkEnabled":true}]},"description":"<p>Implements sap.f.ICard interface.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getCardContent","code":"<pre class=\"prettyprint\">getCardContent() : sap.ui.core.Control</pre>"},{"name":"getCardHeader","visibility":"protected","returnValue":{"type":"sap.f.cards.IHeader","description":"<p>The header of the card</p>","types":[{"value":"sap.f.cards.IHeader","href":"#/api/sap.f.cards.IHeader","linkEnabled":true}]},"description":"<p>Implements sap.f.ICard interface.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getCardHeader","code":"<pre class=\"prettyprint\">getCardHeader() : sap.f.cards.IHeader</pre>"},{"name":"getCardHeaderPosition","visibility":"protected","returnValue":{"type":"sap.f.cards.HeaderPosition","description":"<p>The position of the header of the card.</p>","types":[{"value":"sap.f.cards.HeaderPosition","href":"#/api/sap.f.cards.HeaderPosition","linkEnabled":true}]},"description":"<p>Implements sap.f.ICard interface.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getCardHeaderPosition","code":"<pre class=\"prettyprint\">getCardHeaderPosition() : sap.f.cards.HeaderPosition</pre>"},{"name":"getDataMode","visibility":"public","since":"1.65","returnValue":{"type":"sap.ui.integration.CardDataMode","description":"<p>Value of property <code>dataMode</code></p>","types":[{"value":"sap.ui.integration.CardDataMode","href":"#/api/sap.ui.integration.CardDataMode","linkEnabled":true}]},"description":"<p>Gets current value of property <a target=\"_self\" class=\"jsdoclink scrollToMethod\" data-sap-ui-target=\"getDataMode\" href=\"#/api/sap.ui.integration.widgets.Card/methods/getDataMode\">dataMode</a>.</p><p>Defines the state of the <code>Card</code>. When set to <code>Inactive</code>, the <code>Card</code> doesn't make requests.</p><p>Default value is <code>Active</code>.</p>","experimental":{"since":"1.65"},"href":"#/api/sap.ui.integration.widgets.Card/methods/getDataMode","code":"<pre class=\"prettyprint\">getDataMode() : sap.ui.integration.CardDataMode</pre>"},{"name":"getHeight","visibility":"public","returnValue":{"type":"sap.ui.core.CSSSize","description":"<p>Value of property <code>height</code></p>","types":[{"value":"sap.ui.core.CSSSize","href":"#/api/sap.ui.core.CSSSize","linkEnabled":true}]},"description":"<p>Gets current value of property <a target=\"_self\" class=\"jsdoclink scrollToMethod\" data-sap-ui-target=\"getHeight\" href=\"#/api/sap.ui.integration.widgets.Card/methods/getHeight\">height</a>.</p><p>Defines the height of the card.</p><p>Default value is <code>auto</code>.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getHeight","code":"<pre class=\"prettyprint\">getHeight() : sap.ui.core.CSSSize</pre>"},{"name":"getHostConfigurationId","visibility":"public","returnValue":{"type":"sap.ui.core.ID","types":[{"value":"sap.ui.core.ID","href":"#/api/sap.ui.core.ID","linkEnabled":true}],"description":""},"description":"<p>ID of the element which is the current target of the association <a target=\"_self\" class=\"jsdoclink scrollToMethod\" data-sap-ui-target=\"getHostConfigurationId\" href=\"#/api/sap.ui.integration.widgets.Card/methods/getHostConfigurationId\">hostConfigurationId</a>, or <code>null</code>.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getHostConfigurationId","code":"<pre class=\"prettyprint\">getHostConfigurationId() : sap.ui.core.ID</pre>"},{"name":"getManifest","visibility":"public","returnValue":{"type":"string|Object","description":"<p>Cloned of the parameters.</p>","types":[{"value":"string"},{"value":"Object"}]},"description":"<p>Overwrites getter for card manifest.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getManifest","code":"<pre class=\"prettyprint\">getManifest() : string|Object</pre>"},{"name":"sap.ui.integration.widgets.Card.getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.base.Metadata","description":"<p>Metadata object describing this class</p>","types":[{"value":"sap.ui.base.Metadata","href":"#/api/sap.ui.base.Metadata","linkEnabled":true}]},"description":"<p>Returns a metadata object for class sap.ui.integration.widgets.Card.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/sap.ui.integration.widgets.Card.getMetadata","code":"<pre class=\"prettyprint\">sap.ui.integration.widgets.Card.getMetadata() : sap.ui.base.Metadata</pre>"},{"name":"getParameters","visibility":"public","returnValue":{"type":"Object","description":"<p>A Clone of the parameters.</p>","types":[{"value":"Object"}]},"description":"<p>Overwrites getter for card parameters.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getParameters","code":"<pre class=\"prettyprint\">getParameters() : Object</pre>"},{"name":"getWidth","visibility":"public","returnValue":{"type":"sap.ui.core.CSSSize","description":"<p>Value of property <code>width</code></p>","types":[{"value":"sap.ui.core.CSSSize","href":"#/api/sap.ui.core.CSSSize","linkEnabled":true}]},"description":"<p>Gets current value of property <a target=\"_self\" class=\"jsdoclink scrollToMethod\" data-sap-ui-target=\"getWidth\" href=\"#/api/sap.ui.integration.widgets.Card/methods/getWidth\">width</a>.</p><p>Defines the width of the card.</p><p>Default value is <code>100%</code>.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/getWidth","code":"<pre class=\"prettyprint\">getWidth() : sap.ui.core.CSSSize</pre>"},{"name":"isReady","visibility":"public","returnValue":{"type":"boolean","description":"<p>If the card is ready or not.</p>","types":[{"value":"boolean"}]},"experimental":{"since":"1.65","text":"The API might change."},"href":"#/api/sap.ui.integration.widgets.Card/methods/isReady","code":"<pre class=\"prettyprint\">isReady() : boolean</pre>"},{"name":"refresh","visibility":"public","description":"<p>Refreshes the card by re-applying the manifest settings and triggering all data requests.</p>","experimental":{"since":"1.65","text":"The API might change."},"href":"#/api/sap.ui.integration.widgets.Card/methods/refresh","code":"<pre class=\"prettyprint\">refresh() : void</pre>"},{"name":"setDataMode","visibility":"public","since":"1.65","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Pointer to the control instance to allow method chaining.</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"sMode","optional":false,"description":"<p>The mode to set to the Card.</p>","types":[{"value":"sap.ui.integration.CardDataMode","linkEnabled":true,"href":"#/api/sap.ui.integration.CardDataMode"}],"defaultValue":""}],"description":"<p>Sets a new value for the <code>dataMode</code> property.</p>","experimental":{"since":"1.65","text":"API might change."},"href":"#/api/sap.ui.integration.widgets.Card/methods/setDataMode","code":"<pre class=\"prettyprint\">setDataMode(sMode) : sap.ui.integration.widgets.Card</pre>"},{"name":"setHeight","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"sHeight","optional":false,"description":"<p>New value for property <code>height</code></p>","types":[{"value":"sap.ui.core.CSSSize","linkEnabled":true,"href":"#/api/sap.ui.core.CSSSize"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a target=\"_self\" class=\"jsdoclink scrollToMethod\" data-sap-ui-target=\"getHeight\" href=\"#/api/sap.ui.integration.widgets.Card/methods/getHeight\">height</a>.</p><p>Defines the height of the card.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>auto</code>.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/setHeight","code":"<pre class=\"prettyprint\">setHeight(sHeight) : sap.ui.integration.widgets.Card</pre>"},{"name":"setHostConfigurationId","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"oHostConfigurationId","optional":false,"description":"<p>ID of an element which becomes the new target of this hostConfigurationId association; alternatively, an element instance may be given</p>","types":[{"value":"sap.ui.core.ID","linkEnabled":true,"href":"#/api/sap.ui.core.ID"},{"value":"sap.ui.core.Control","linkEnabled":true,"href":"#/api/sap.ui.core.Control"}],"defaultValue":""}],"description":"<p>Sets the associated <a target=\"_self\" class=\"jsdoclink scrollToMethod\" data-sap-ui-target=\"getHostConfigurationId\" href=\"#/api/sap.ui.integration.widgets.Card/methods/getHostConfigurationId\">hostConfigurationId</a>.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/setHostConfigurationId","code":"<pre class=\"prettyprint\">setHostConfigurationId(oHostConfigurationId) : sap.ui.integration.widgets.Card</pre>"},{"name":"setManifest","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Pointer to the control instance to allow method chaining.</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"vValue","optional":false,"description":"<p>The manifest object or its URL.</p>","types":[{"value":"string"},{"value":"Object"}],"defaultValue":""}],"description":"<p>Overwrites setter for card manifest.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/setManifest","code":"<pre class=\"prettyprint\">setManifest(vValue) : sap.ui.integration.widgets.Card</pre>"},{"name":"setParameters","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Pointer to the control instance to allow method chaining.</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"vValue","optional":false,"description":"<p>oParameters Parameters set in the card trough parameters property.</p>","types":[{"value":"Object"}],"defaultValue":""}],"description":"<p>Overwrites setter for card params.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/setParameters","code":"<pre class=\"prettyprint\">setParameters(vValue) : sap.ui.integration.widgets.Card</pre>"},{"name":"setWidth","visibility":"public","returnValue":{"type":"sap.ui.integration.widgets.Card","description":"<p>Reference to <code>this</code> in order to allow method chaining</p>","types":[{"value":"sap.ui.integration.widgets.Card","href":"#/api/sap.ui.integration.widgets.Card","linkEnabled":true}]},"parameters":[{"name":"sWidth","optional":false,"description":"<p>New value for property <code>width</code></p>","types":[{"value":"sap.ui.core.CSSSize","linkEnabled":true,"href":"#/api/sap.ui.core.CSSSize"}],"defaultValue":""}],"description":"<p>Sets a new value for property <a target=\"_self\" class=\"jsdoclink scrollToMethod\" data-sap-ui-target=\"getWidth\" href=\"#/api/sap.ui.integration.widgets.Card/methods/getWidth\">width</a>.</p><p>Defines the width of the card.</p><p>When called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.</p><p>Default value is <code>100%</code>.</p>","href":"#/api/sap.ui.integration.widgets.Card/methods/setWidth","code":"<pre class=\"prettyprint\">setWidth(sWidth) : sap.ui.integration.widgets.Card</pre>"}],"displayName":"sap.ui.integration.widgets.Card","component":"CA-UI5-CTR","hasSample":true,"title":"class sap.ui.integration.widgets.Card","subTitle":"","docuLink":"5b46b03f024542ba802d99d67bc1a3f4","docuLinkText":" Cards"},{"kind":"class","name":"Service","basename":"Service","resource":"sap/ui/integration/services/Service.js","module":"sap/ui/integration/services/Service","visibility":"restricted","experimental":{},"constructor":{"visibility":"restricted","description":"<p>Base class for all services. To inherit use the extend method <code>Service.extend<code></p>","references":[],"codeExample":"<pre class=\"prettyprint\">new Service()</pre>"},"displayName":"Service","hasSample":false,"title":"class Service","subTitle":""},{"name":"sap","displayName":"sap","kind":"namespace","nodes":[{"name":"sap.ui","description":"","href":"#/api/sap.ui"}],"hasSample":false,"title":"namespace sap","subTitle":""},{"name":"sap.ui","displayName":"sap.ui","kind":"namespace","nodes":[{"name":"sap.ui.integration","description":"<p>SAPUI5 library with controls specialized for SAP Fiori apps.</p>","href":"#/api/sap.ui.integration"}],"hasSample":false,"title":"namespace sap.ui","subTitle":""},{"name":"sap.ui.integration.widgets","displayName":"sap.ui.integration.widgets","kind":"namespace","nodes":[{"name":"sap.ui.integration.widgets.Card","description":"<p>A control that represents a container with a header and content.</p><h3>Overview</h3><p> Cards are small user interface elements which provide the most important information from an app, related to a specific role or task. The information is represented in a compact manner, allowing for actions to be executed. Cards can be described as small representations of an app which can be integrated in different systems.</p><p>The integration card is defined in a declarative way, using a manifest.json to be: <ul> <li>Easily integrated into apps</li> <li>Easily reused across apps</li> <li>Understandable by other technologies</li> <li>Self-contained (without external configuration)</li> <li>Easily reconfigured in app layers (including backend)</li> <li>Easy to separate the roles of the card and the app developers</li> </ul></p><p>The role of the card developer is to describe the card in a manifest.json file and define: <ul> <li>Header</li> <li>Content</li> <li>Data source</li> <li>Possible actions</li> </ul></p><p>The role of the app developer is to integrate the card into the app and define: <ul> <li>The dimensions of the card inside a layout of choice, using the <code>width</code> and <code>height</code> properties</li> <li>The behavior for the actions described in the manifest.json file, using the action event</li> </ul></p><h3>Usage</h3><p>The <code>\"sap.app\"</code> <code>type</code> property in the manifest file must be set to <code>\"card\"</code>. The namespace used to define a card is <code>\"sap.card\"</code>. Every card has a type which can be one of the following: List, Analytical, Timeline, Object, Table, Component (experimental)</p><p>An example of a manifest.json:</p><p><pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\",\n    ...\n  },\n  \"sap.ui5\": {\n    ...\n  },\n  \"sap.card\": {\n    \"type\": \"List\",\n    \"header\": { ... },\n    \"content\": { ... }\n  }\n}\n</code>\n</pre></p><p>Examples of header sections:</p><p>The default header type can contain title, subtitle, icon, and status. <pre>\n <code>\n{\n  ...\n  \"sap.card\": {\n    \"header\": {\n      \"title\": \"An example title\",\n      \"subTitle\": \"Some subtitle\",\n      \"icon\": {\n        \"src\": \"sap-icon://business-objects-experience\"\n      },\n      \"status\": {\n        \"text\": \"5 of 20\"\n      }\n    },\n    ...\n  }\n}\n </code>\n </pre></p><p>The numeric header type can contain title, subtitle, unitOfMeasurement, details, main indicator, and side indicators. <pre>\n <code>\n{\n  ...\n  \"sap.card\": {\n    \"header\": {\n      \"type\": \"Numeric\",\n      \"title\": \"Project Cloud Transformation\",\n      \"subTitle\": \"Revenue\",\n      \"unitOfMeasurement\": \"EUR\",\n      \"mainIndicator\": {\n        \"number\": \"44\",\n        \"unit\": \"%\",\n        \"trend\": \"Down\",\n        \"state\": \"Critical\"\n      },\n      \"details\": \"Some details\",\n      \"sideIndicators\": [\n        {\n          \"title\": \"Target\",\n          \"number\": \"17\",\n          \"unit\": \"%\"\n        },\n        {\n          \"title\": \"Deviation\",\n          \"number\": \"5\",\n          \"unit\": \"%\"\n        }\n      ]\n    },\n    ...\n  }\n}\n </code>\n </pre></p><p>The content of the card is created based on the card type. Possible card types: <ul> <li>List</li> <li>Object</li> <li>Timeline</li> <li>Analytical</li> <li>Table</li> <li>Component (experimental)</li> </ul></p><p>List card contains a set of items. The <code>\"item\"</code> property defines the template for all the items of the list. The <code>\"data\"</code> property provides the displayed information.</p><p>Example: <pre>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"List\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"data\": {\n        \"json\": [{\n            \"Name\": \"Comfort Easy\",\n            \"Description\": \"A 32 GB Digital Assistant with a high-resolution color screen\",\n            \"Highlight\": \"Error\"\n          },\n          {\n            \"Name\": \"ITelO Vault\",\n            \"Description\": \"A Digital Organizer with state-of-the-art Storage Encryption\",\n            \"Highlight\": \"Warning\"\n          },\n          {\n            \"Name\": \"Notebook Professional 15\",\n            \"Description\": \"Notebook Professional 15 description\",\n            \"Highlight\": \"Success\"\n          }\n        ]\n      },\n      \"item\": {\n        \"title\": {\n          \"label\": \"{{title_label}}\",\n          \"value\": \"{Name}\"\n        },\n        \"description\": {\n          \"label\": \"{{description_label}}\",\n          \"value\": \"{Description}\"\n        },\n        \"highlight\": \"{Highlight}\"\n      }\n    }\n  }\n}\n</pre></p><p>Analytical card contains a chart visualization configuration. Supported chart types are Line, StackedBar, StackedColumn, Donut.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"Analytical\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"chartType\": \"Line\",\n      \"legend\": {\n        \"visible\": true,\n        \"position\": \"Bottom\",\n        \"alignment\": \"Left\"\n      },\n      \"plotArea\": {\n        \"dataLabel\": {\n          \"visible\": true\n        },\n        \"categoryAxisText\": {\n          \"visible\": false\n        },\n        \"valueAxisText\": {\n          \"visible\": false\n        }\n      },\n      \"title\": {\n        \"text\": \"Line chart\",\n        \"visible\": true,\n        \"alignment\": \"Left\"\n      },\n      \"measureAxis\": \"valueAxis\",\n      \"dimensionAxis\": \"categoryAxis\",\n      \"data\": {\n        \"json\": {\n          \"list\": [\n            {\n              \"Week\": \"CW14\",\n              \"Revenue\": 431000.22,\n              \"Cost\": 230000.00,\n              \"Cost1\": 24800.63,\n              \"Cost2\": 205199.37,\n              \"Cost3\": 199999.37,\n              \"Target\": 500000.00,\n              \"Budget\": 210000.00\n            },\n            {\n              \"Week\": \"CW15\",\n              \"Revenue\": 494000.30,\n              \"Cost\": 238000.00,\n              \"Cost1\": 99200.39,\n              \"Cost2\": 138799.61,\n              \"Cost3\": 200199.37,\n              \"Target\": 500000.00,\n              \"Budget\": 224000.00\n            }\n          ]\n        },\n        \"path\": \"/list\"\n      },\n      \"dimensions\": [\n        {\n          \"label\": \"Weeks\",\n          \"value\": \"{Week}\"\n        }\n      ],\n      \"measures\": [\n        {\n          \"label\": \"Revenue\",\n          \"value\": \"{Revenue}\"\n        },\n        {\n          \"label\": \"Cost\",\n          \"value\": \"{Cost}\"\n        }\n      ]\n    }\n  }\n}\n</code>\n</pre></p><p>Object card contains information about an object. It is structured in groups. Every group can have a title and items. The items contain display name (label) and value.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n\t    \"type\": \"Object\",\n     \"header\": {\n       ...\n     },\n     \"content\": {\n       \"groups\": [\n         {\n           \"title\": \"Group title\",\n           \"items\": [\n             {\n               \"label\": \"Name\",\n               \"value\": \"Ivan\"\n             },\n             {\n               \"label\": \"Surname\",\n               \"value\": \"Petrov\"\n             },\n             {\n               \"label\": \"Phone\",\n               \"value\": \"+1 1234 1234555\"\n             }\n           ]\n         },\n         {\n           \"title\": \"Organization\",\n           \"items\": [\n             {\n               \"label\": \"Company Name\",\n               \"value\": \"Sap\",\n               \"icon\": {\n                 \"src\": \"../images/Woman_avatar_02.png\"\n               }\n             }\n           ]\n         }\n       ]\n     }\n  }\n}\n</code>\n</pre></p><p>Timeline card contains a set of timeline items. The \"item\" property defines the template for all the items of the timeline.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"Timeline\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"data\": {\n        \"json\": [\n          {\n            \"Title\": \"Weekly sync: Marketplace / Design Stream\",\n            \"Description\": \"MRR WDF18 C3.2(GLASSBOX)\",\n            \"Icon\": \"sap-icon://appointment-2\",\n            \"Time\": \"10:00 - 10:30\"\n          },\n          {\n            \"Title\": \"Video Conference for FLP@SF, S4,Hybris\",\n            \"Icon\": \"sap-icon://my-view\",\n            \"Time\": \"14:00 - 15:30\"\n          },\n          {\n            \"Title\": \"Call 'Project Nimbus'\",\n            \"Icon\": \"sap-icon://outgoing-call\",\n            \"Time\": \"16:00 - 16:30\"\n          }\n        ]\n      },\n      \"item\": {\n        \"dateTime\": {\n          \"value\": \"{Time}\"\n        },\n        \"description\" : {\n          \"value\": \"{Description}\"\n        },\n        \"title\": {\n          \"value\": \"{Title}\"\n        },\n        \"icon\": {\n          \"src\": \"{Icon}\"\n        }\n      }\n    }\n  }\n}\n</code>\n</pre></p><p>Table card displays a set of items in a table format. The <code>\"row\"</code> property defines the template for all rows of the table.</p><p>Example: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"Table\",\n    \"header\": {\n      ...\n    },\n    \"content\": {\n      \"data\": {\n        \"json\": [\n          {\n           \"salesOrder\": \"5000010050\",\n           \"customerName\": \"Robert Brown Entertainment\",\n           \"netAmount\": \"2K USD\",\n           \"status\": \"Delivered\",\n           \"statusState\": \"Success\"\n          },\n          {\n           \"salesOrder\": \"5000010051\",\n           \"customerName\": \"Entertainment Argentinia\",\n           \"netAmount\": \"127k USD\",\n           \"status\": \"Canceled\",\n           \"statusState\": \"Error\"\n          },\n          {\n           \"salesOrder\": \"5000010052\",\n           \"customerName\": \"Brazil Technologies\",\n           \"netAmount\": \"8K USD\",\n           \"status\": \"In Progress\",\n           \"statusState\": \"Warning\"\n          }\n        ]\n      },\n      \"row\": {\n        \"columns\": [{\n           \"title\": \"Sales Order\",\n           \"value\": \"{salesOrder}\",\n           \"identifier\": true\n          },\n          {\n            \"title\": \"Customer\",\n            \"value\": \"{customerName}\"\n          },\n          {\n             \"title\": \"Net Amount\",\n             \"value\": \"{netAmount}\"\n          },\n          {\n             \"title\": \"Status\",\n             \"value\": \"{status}\",\n             \"state\": \"{statusState}\"\n          }\n        ]\n      }\n    }\n  }\n}\n</code>\n</pre></p><p>Component card can be used to display multiple controls (inside one Component). It is used as a custom approach for use cases, which do not fit in other card types and structures. It provides much more flexibility and responsibility to the Card’s authors. Reusability is achieved on Component level and this type of Card is usable in LOB products that are based on the SAPUI5 Framework.</p><p>Example: <pre>\n<code>\n{\n\t\"sap.app\": {\n\t\t\"id\": \"sap.ui.integration.sample.ComponentCard.cardContent\",\n\t\t\"type\": \"card\",\n\t\t\"applicationVersion\": {\n\t\t\"version\": \"1.0.0\"\n\t\t}\n\t},\n\t\"sap.ui5\": {\n\t\t\"rootView\": {\n\t\t\t\"viewName\": \"sap.ui.integration.sample.ComponentCard.cardContent.View\",\n\t\t\t\"type\": \"XML\",\n\t\t\t\"async\": true,\n\t\t\t\"id\": \"app\"\n\t\t},\n\t\t\"dependencies\": {\n\t\t\t\"minUI5Version\": \"1.38\",\n\t\t\t\"libs\": {\n\t\t\t\t\"sap.m\": {}\n\t\t\t}\n\t\t}\n\t},\n\t\"sap.card\": {\n\t\t\"type\": \"Component\",\n\t\t\"header\": {\n\t\t\t\"title\": \"Visit our workshop\"\n\t\t}\n\t}\n}\n</code>\n</pre></p><p>Item-based cards (Timeline and List) have an additional <code>\"maxItems\"</code> content property, which defines the maximum number of items the card can have.</p><h3>Data Handling</h3><p> To add data to the card, you can add a data section, header or content. The card automatically creates an unnamed model which can be used to resolve binding syntaxes inside the card manifest.</p><p>Static data: <pre>\n<code>\n{\n  ...\n  \"content\": {\n    \"data\": {\n      \"json\": {\n        \"items\": [\n          {\n            \"Title\": \"Weekly sync: Marketplace / Design Stream\",\n            \"Description\": \"MRR WDF18 C3.2(GLASSBOX)\",\n            \"Icon\": \"sap-icon://appointment-2\",\n            \"Time\": \"10:00 - 10:30\"\n          },\n          {\n            \"Title\": \"Video Conference for FLP@SF, S4,Hybris\",\n            \"Icon\": \"sap-icon://my-view\",\n            \"Time\": \"14:00 - 15:30\"\n          }\n        ]\n      },\n      \"path\": \"/items\"\n    },\n    ...\n  }\n}\n</code>\n</pre></p><p>Requesting data: <pre>\n<code>\n{\n  ...\n  \"content\": {\n    \"data\": {\n      \"request\": {\n        \"url\": \"/path/to/data\"\n      },\n      \"path\": \"/items\"\n    },\n    ...\n  }\n}\n</code>\n</pre></p><h3>Actions</h3><p> Actions add behavior to the card. To add a navigation action to the header and to the items, you can configure it inside the manifest.</p><p>Actions have: <ul> <li>Type</li> <li>Parameters</li> <li>Enabled flag (true by default)</li> </ul></p><p>In the example below, a navigation action is added both to the header and the list items: <pre>\n<code>\n{\n  \"sap.app\": {\n    \"type\": \"card\"\n  },\n  \"sap.card\": {\n    \"type\": \"List\",\n    \"header\": {\n      \"title\": \"Request list content Card\",\n      \"subTitle\": \"Card Subtitle\",\n      \"icon\": {\n        \"src\": \"sap-icon://accept\"\n      },\n      \"status\": \"100 of 200\",\n      \"actions\": [\n        {\n          \"type\": \"Navigation\",\n          \"parameters\": {\n            \"url\": \"/some/relative/path\"\n          }\n        }\n      ]\n    },\n    \"content\": {\n      \"data\": {\n        \"request\": {\n          \"url\": \"./cardcontent/someitems_services2.json\"\n        },\n        \"path\": \"/items\"\n      },\n      \"item\": {\n        \"icon\": {\n          \"src\": \"{icon}\"\n        },\n        \"title\": {\n          \"value\": \"{Name}\"\n        },\n        \"description\": {\n          \"value\": \"{Description}\"\n        },\n        \"actions\": [\n          {\n            \"type\": \"Navigation\",\n            \"enabled\": \"{= ${url}}\",\n            \"parameters\": {\n              \"url\": \"{url}\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n</code>\n</pre></p><p><i>When to use</i> <ul> <li>When you want to reuse the card across apps.</li> <li>When you need easy integration and configuration.</li> </ul></p><p><i>When not to use</i> <ul> <li>When you need more header and content flexibility.</li> <li>When you have to achieve simple card visualization. For such cases, use: <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.f.Card\">Card</a>.</li> <li>When you have to use an application model. For such cases, use: <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.f.Card\">Card</a>.</li> <li>When you need complex behavior. For such cases, use: <a target=\"_self\" class=\"jsdoclink\" href=\"#/api/sap.f.Card\">Card</a>.</li> </ul></p>","href":"#/api/sap.ui.integration.widgets.Card"}],"component":"CA-UI5-CTR","hasSample":false,"title":"namespace sap.ui.integration.widgets","subTitle":""}],"defaultComponent":"CA-UI5-CTR"}